// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ProjectStructure.Migrations
{
    [DbContext(typeof(AirportContext))]
    partial class AirportContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Models.Crew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PilotId")
                        .HasColumnName("PilotId");

                    b.HasKey("Id");

                    b.HasIndex("PilotId")
                        .IsUnique();

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("DAL.Models.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CrewId")
                        .HasColumnName("CrewId");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnName("DepartureDate");

                    b.Property<int>("FlightId")
                        .HasColumnName("FlightId");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnName("FlightNumber")
                        .HasMaxLength(6);

                    b.Property<int>("PlaneId")
                        .HasColumnName("PlaneId");

                    b.HasKey("Id");

                    b.HasIndex("CrewId")
                        .IsUnique();

                    b.HasIndex("FlightId")
                        .IsUnique();

                    b.HasIndex("PlaneId")
                        .IsUnique();

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("DAL.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnName("ArrivalTime");

                    b.Property<string>("DepartureAirport")
                        .IsRequired()
                        .HasColumnName("DepartureAirport")
                        .HasMaxLength(3);

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnName("DepartureTime");

                    b.Property<string>("DestinationAirport")
                        .IsRequired()
                        .HasColumnName("DestinationAirport")
                        .HasMaxLength(3);

                    b.Property<string>("FlightNumber")
                        .HasColumnName("FlightNumber")
                        .HasMaxLength(6);

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("DAL.Models.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("BirthDate")
                        .HasColumnType("date");

                    b.Property<int>("Exp")
                        .HasColumnName("Exp");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("DAL.Models.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("LifeTimeTicks")
                        .HasColumnName("LifeTimeTicks");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name")
                        .HasMaxLength(50);

                    b.Property<int>("PlaneTypeId")
                        .HasColumnName("PlaneTypeId");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnName("ReleaseDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("PlaneTypeId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("DAL.Models.PlaneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Carrying")
                        .HasColumnName("Carrying");

                    b.Property<string>("PlaneModel")
                        .IsRequired()
                        .HasColumnName("PlaneModel")
                        .HasMaxLength(25);

                    b.Property<int>("SeatsNumber")
                        .HasColumnName("SeatsNumber");

                    b.HasKey("Id");

                    b.ToTable("PlaneTypes");
                });

            modelBuilder.Entity("DAL.Models.Stewardess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnName("BirthDate")
                        .HasColumnType("date");

                    b.Property<int?>("CrewId")
                        .HasColumnName("CrewId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnName("FirstName")
                        .HasMaxLength(20);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnName("LastName")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardesses");
                });

            modelBuilder.Entity("DAL.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlightId")
                        .HasColumnName("FlightId");

                    b.Property<string>("FlightNumber")
                        .IsRequired()
                        .HasColumnName("FlightNumber")
                        .HasMaxLength(6);

                    b.Property<decimal>("Price")
                        .HasColumnName("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("DAL.Models.Crew", b =>
                {
                    b.HasOne("DAL.Models.Pilot", "Pilot")
                        .WithOne("Crew")
                        .HasForeignKey("DAL.Models.Crew", "PilotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.Departure", b =>
                {
                    b.HasOne("DAL.Models.Crew", "Crew")
                        .WithOne("Departure")
                        .HasForeignKey("DAL.Models.Departure", "CrewId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Flight", "Flight")
                        .WithOne("Departure")
                        .HasForeignKey("DAL.Models.Departure", "FlightId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DAL.Models.Plane", "Plane")
                        .WithOne("Departure")
                        .HasForeignKey("DAL.Models.Departure", "PlaneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.Plane", b =>
                {
                    b.HasOne("DAL.Models.PlaneType", "PlaneType")
                        .WithMany("Planes")
                        .HasForeignKey("PlaneTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DAL.Models.Stewardess", b =>
                {
                    b.HasOne("DAL.Models.Crew", "Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId");
                });

            modelBuilder.Entity("DAL.Models.Ticket", b =>
                {
                    b.HasOne("DAL.Models.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
